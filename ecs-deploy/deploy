#!/usr/bin/env bash
#
# DESCRIPTION: ECS Deployment Script
#

set -e

# BEGIN CUSTOMIZATIONS #
ECS_REGION='us-east-1'
ECS_CLUSTER_NAME='ECS-Demo'
ECS_SERVICE_NAME='ecs-demo'
ECS_TASK_DEFINITION_NAME='web-app-demo'
DOCKER_IMAGE_NAME='vasanth220892/web-static'
#Docker_Registry_URI='account-number.dkr.ecr.us-west-2.amazonaws.com'
VERSION=${GIT_BRANCH##origin/}-V_${BUILD_NUMBER}
AWSCLI_VER_TAR=1.11.91
# END CUSTOMIZATIONS #


AWSCLI_VER=$(aws --version 2>&1 | cut -d ' ' -f 1 | cut -d '/' -f 2)
# END OTHER VAR DEFINITIONS #

if [[ ${AWSCLI_VER} < ${AWSCLI_VER_TAR} ]]
then echo "ERROR: Please upgrade your AWS CLI to version ${AWSCLI_VER_TAR} or later!"
  exit 1
fi



# ECS operations
(
  

  # Store revision
  REVISION=${GIT_BRANCH##origin/}

  # Get previous task definition from ECS
  PREVIOUS_TASK_DEF=$(aws ecs describe-task-definition --region "${ECS_REGION}" --task-definition "${ECS_TASK_DEFINITION_NAME}")

  # Create the new ECS container definition from the last task definition
  NEW_CONTAINER_DEF=$(echo "${PREVIOUS_TASK_DEF}" | python <(cat <<-EOF
import sys, json
definition = json.load(sys.stdin)['taskDefinition']['containerDefinitions']
definition[0].update([
{
   'memory' : '256'}])
definition[1].update([
{
   'memory' : '256'}])
definition[1]['environment'].extend([
  {
    'name' : 'REVISION',
    'value' : '${REVISION}'
  },
  {
    'name' : 'RELEASE_VERSION',
    'value' : '${VERSION}'
  }])
definition[1]['image'] = '${DOCKER_IMAGE_NAME}:${VERSION}'
print json.dumps(definition)
EOF
  ))

  # Create the new task definition
  aws ecs register-task-definition --region "${ECS_REGION}" --family "${ECS_TASK_DEFINITION_NAME}" --container-definitions "${NEW_CONTAINER_DEF}"

  # Update the service to use the new task defintion
  aws ecs update-service --region "${ECS_REGION}" --cluster "${ECS_CLUSTER_NAME}" --service "${ECS_SERVICE_NAME}"  --task-definition "${ECS_TASK_DEFINITION_NAME}"
)
echo "Successfully updated new docker image"
